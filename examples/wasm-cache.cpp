#include <cstdio>

#include <jsapi.h>
#include <js/CompilationAndEvaluation.h>
#include <js/SourceText.h>
#include <js/WasmModule.h>
#include <js/ArrayBuffer.h>
#include <js/BuildId.h>

#include "boilerplate.h"

// Read cache (generated by `js --wasm-compile-and-serialize`).

unsigned char ___hi_dat[] = {
  0x0f, 0x00, 0x00, 0x00, 0x4a, 0x53, 0x2d, 0x73, 0x68, 0x65, 0x6c, 0x6c,
  0x00, 0x28, 0x3a, 0x33, 0x29, 0x6d, 0x2b, 0xb0, 0x04, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x12, 0x07, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03,
  0x08, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x6e, 0x05, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x3e, 0x01, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x29, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x65, 0x6e, 0x76, 0x00, 0x04, 0x00, 0x00, 0x00, 0x62,
  0x61, 0x72, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x04,
  0x00, 0x00, 0x00, 0x66, 0x6f, 0x6f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xe4,
  0xe4, 0xe4, 0xe4, 0x00, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x00,
  0xe4, 0xe4, 0xe4, 0xe4, 0xe4, 0xe4, 0xe4, 0x00, 0xaa, 0xaa, 0xaa, 0x00,
  0xe4, 0xe4, 0xe4, 0x00, 0xaa, 0xaa, 0xaa, 0x00, 0xe4, 0xe4, 0xe4, 0x00,
  0x01, 0x00, 0xe4, 0xe4, 0xe4, 0xe4, 0xe4, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0xaa, 0x00, 0xe4, 0xe4, 0xe4, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x09,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x00, 0x00, 0x6b,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10,
  0x14, 0xaa, 0xaa, 0x00, 0xe4, 0xe4, 0xe4, 0x70, 0x00, 0x00, 0x00, 0xe7,
  0x00, 0x00, 0x00, 0xe8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x32,
  0x00, 0x00, 0x00, 0x10, 0x14, 0xaa, 0xaa, 0x00, 0xe4, 0xe4, 0xe4, 0xf0,
  0x00, 0x00, 0x00, 0x6b, 0x01, 0x00, 0x00, 0x6c, 0x01, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0x03,
  0xe4, 0xe4, 0xe4, 0x70, 0x01, 0x00, 0x00, 0xd1, 0x02, 0x00, 0x00, 0x59,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x8a, 0x00, 0xab, 0x00, 0xaa,
  0xaa, 0xaa, 0xaa, 0x04, 0xe4, 0xe4, 0xe4, 0x60, 0x03, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xdf, 0x03, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0x01, 0xe4, 0xe4, 0xe4, 0xe0,
  0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0x04, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xaa, 0xaa, 0x02,
  0xe4, 0xe4, 0xe4, 0xb0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x22,
  0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x06, 0xe4, 0xe4, 0xe4, 0x30, 0x06, 0x00, 0x00, 0xd8,
  0x07, 0x00, 0x00, 0xd9, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xe4, 0xe4, 0xe4, 0xe0,
  0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4b, 0x08, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x09,
  0xe4, 0xe4, 0xe4, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x20, 0x4e,
  0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x20, 0xc9, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x9a, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28,
  0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
  0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x92, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0xfc, 0xfd, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0xfc, 0xfd, 0xff, 0x7f, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0xf0, 0x00, 0x00, 0x00, 0x70, 0x01, 0x00, 0x00, 0x01,
  0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xfc, 0xfd, 0xff, 0x7f, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x60,
  0x03, 0x00, 0x00, 0x01, 0xe4, 0xe4, 0xe4, 0x52, 0x08, 0x00, 0x00, 0x55,
  0x48, 0x8b, 0xec, 0x41, 0x83, 0xfa, 0x23, 0x0f, 0x84, 0x06, 0x00, 0x00,
  0x00, 0x0f, 0x0b, 0x55, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xec, 0x20, 0x49,
  0x39, 0x66, 0x30, 0x0f, 0x82, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x0b, 0x4c,
  0x89, 0x74, 0x24, 0x18, 0x4c, 0x89, 0x74, 0x24, 0x08, 0x49, 0x8b, 0x46,
  0x60, 0x49, 0x8b, 0x5e, 0x70, 0x4d, 0x8b, 0x56, 0x20, 0x49, 0x89, 0x9a,
  0x98, 0x00, 0x00, 0x00, 0x4d, 0x8b, 0x76, 0x68, 0x4c, 0x89, 0x34, 0x24,
  0x4d, 0x8b, 0x3e, 0xff, 0xd0, 0x4c, 0x8b, 0x74, 0x24, 0x18, 0x4d, 0x8b,
  0x3e, 0x4d, 0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x66, 0x18, 0x4d, 0x89, 0xa2,
  0x98, 0x00, 0x00, 0x00, 0x48, 0x83, 0xc4, 0x20, 0x5d, 0xc3, 0x0f, 0x0b,
  0xf4, 0xf4, 0xf4, 0x55, 0x48, 0x8b, 0xec, 0x41, 0x83, 0xfa, 0x03, 0x0f,
  0x84, 0x06, 0x00, 0x00, 0x00, 0x0f, 0x0b, 0x55, 0x48, 0x8b, 0xec, 0x48,
  0x83, 0xec, 0x10, 0x49, 0x39, 0x66, 0x30, 0x0f, 0x82, 0x02, 0x00, 0x00,
  0x00, 0x0f, 0x0b, 0xbf, 0x2a, 0x00, 0x00, 0x00, 0x40, 0xf6, 0xc4, 0x0f,
  0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x4c, 0x89, 0x74, 0x24, 0x08,
  0x49, 0x8b, 0x46, 0x60, 0x49, 0x8b, 0x5e, 0x70, 0x4d, 0x8b, 0x56, 0x20,
  0x49, 0x89, 0x9a, 0x98, 0x00, 0x00, 0x00, 0x4d, 0x8b, 0x76, 0x68, 0x4c,
  0x89, 0x34, 0x24, 0x4d, 0x8b, 0x3e, 0xff, 0xd0, 0x4c, 0x8b, 0x74, 0x24,
  0x08, 0x4d, 0x8b, 0x3e, 0x4d, 0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x66, 0x18,
  0x4d, 0x89, 0xa2, 0x98, 0x00, 0x00, 0x00, 0x8b, 0xc0, 0x48, 0x83, 0xc4,
  0x10, 0x5d, 0xc3, 0x0f, 0x0b, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0x55,
  0x48, 0x8b, 0xec, 0x4d, 0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x92, 0xb8, 0x01,
  0x00, 0x00, 0x41, 0xc7, 0x42, 0x78, 0x06, 0x00, 0x00, 0x00, 0x48, 0x83,
  0xcd, 0x01, 0x49, 0x89, 0x6a, 0x70, 0x48, 0x83, 0xe5, 0xfe, 0x48, 0x83,
  0xec, 0x10, 0x89, 0x3c, 0x24, 0x49, 0x8b, 0x7e, 0x10, 0x33, 0xf6, 0xba,
  0x01, 0x00, 0x00, 0x00, 0x48, 0x8d, 0x0c, 0x24, 0x40, 0xf6, 0xc4, 0x0f,
  0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48, 0xb8, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd0, 0x85, 0xc0, 0x0f, 0x84, 0x98,
  0x06, 0x00, 0x00, 0x8b, 0x04, 0x24, 0x48, 0x83, 0xc4, 0x10, 0x4d, 0x8b,
  0x56, 0x20, 0x4d, 0x8b, 0x92, 0xb8, 0x01, 0x00, 0x00, 0x49, 0xc7, 0x42,
  0x70, 0x00, 0x00, 0x00, 0x00, 0x41, 0xc7, 0x42, 0x78, 0x00, 0x00, 0x00,
  0x00, 0x5d, 0xc3, 0xf4, 0xf4, 0xf4, 0xf4, 0x55, 0x48, 0x8b, 0xec, 0x4d,
  0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x92, 0xb8, 0x01, 0x00, 0x00, 0x49, 0xf7,
  0x42, 0x70, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00,
  0xcc, 0x48, 0x83, 0xec, 0x38, 0x48, 0xc7, 0x04, 0x24, 0x48, 0x20, 0x00,
  0x00, 0x48, 0xc7, 0x44, 0x24, 0x10, 0x01, 0x00, 0x00, 0x00, 0x49, 0xbb,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xf9, 0xff, 0x4c, 0x89, 0x5c, 0x24,
  0x18, 0x89, 0x7c, 0x24, 0x20, 0xc7, 0x44, 0x24, 0x24, 0x00, 0x80, 0xf8,
  0xff, 0x4c, 0x89, 0x74, 0x24, 0x28, 0x4d, 0x8b, 0x56, 0x78, 0x4c, 0x89,
  0x54, 0x24, 0x08, 0x45, 0x0f, 0xb7, 0x62, 0x18, 0x41, 0x83, 0xfc, 0x01,
  0x0f, 0x87, 0xf7, 0x00, 0x00, 0x00, 0x4d, 0x8b, 0x52, 0x28, 0x4d, 0x8b,
  0x12, 0x40, 0xf6, 0xc4, 0x08, 0x0f, 0x84, 0x0a, 0x00, 0x00, 0x00, 0x40,
  0xf6, 0xc4, 0x07, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x41, 0xff,
  0xd2, 0x40, 0xf6, 0xc4, 0x08, 0x0f, 0x84, 0x0a, 0x00, 0x00, 0x00, 0x40,
  0xf6, 0xc4, 0x07, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x4c, 0x8b,
  0x74, 0x24, 0x28, 0x48, 0x8b, 0xec, 0x48, 0x83, 0xc5, 0x38, 0x48, 0x83,
  0xec, 0x08, 0x40, 0xf6, 0xc4, 0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00,
  0xcc, 0x4c, 0x8b, 0xd9, 0x49, 0xc1, 0xeb, 0x2f, 0x41, 0x81, 0xfb, 0xf5,
  0xff, 0x01, 0x00, 0x0f, 0x85, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x4c, 0x8b,
  0xd9, 0x49, 0xc1, 0xeb, 0x2f, 0x41, 0x81, 0xfb, 0xf1, 0xff, 0x01, 0x00,
  0x0f, 0x84, 0x5d, 0x00, 0x00, 0x00, 0x41, 0x81, 0xfb, 0xf2, 0xff, 0x01,
  0x00, 0x0f, 0x84, 0x49, 0x00, 0x00, 0x00, 0x41, 0x81, 0xfb, 0xf0, 0xff,
  0x01, 0x00, 0x0f, 0x86, 0x21, 0x00, 0x00, 0x00, 0x41, 0x81, 0xfb, 0xf4,
  0xff, 0x01, 0x00, 0x0f, 0x84, 0x0d, 0x00, 0x00, 0x00, 0x41, 0x81, 0xfb,
  0xf3, 0xff, 0x01, 0x00, 0x0f, 0x85, 0x58, 0x00, 0x00, 0x00, 0x33, 0xc0,
  0xe9, 0x24, 0x00, 0x00, 0x00, 0x66, 0x48, 0x0f, 0x6e, 0xc1, 0xf2, 0x48,
  0x0f, 0x2c, 0xc0, 0x48, 0x83, 0xf8, 0x01, 0x0f, 0x80, 0x3d, 0x00, 0x00,
  0x00, 0x8b, 0xc0, 0xe9, 0x09, 0x00, 0x00, 0x00, 0x8b, 0xc1, 0xe9, 0x02,
  0x00, 0x00, 0x00, 0x8b, 0xc1, 0x4d, 0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x92,
  0xb8, 0x01, 0x00, 0x00, 0x49, 0xf7, 0x42, 0x70, 0x01, 0x00, 0x00, 0x00,
  0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48, 0x83, 0xc4, 0x40, 0x5d,
  0xc3, 0x4d, 0x8b, 0x56, 0x10, 0x4d, 0x8b, 0x52, 0x10, 0xe9, 0x03, 0xff,
  0xff, 0xff, 0x40, 0xf6, 0xc4, 0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00,
  0xcc, 0x48, 0x89, 0x0c, 0x24, 0x4d, 0x8b, 0x66, 0x20, 0x4d, 0x8b, 0xa4,
  0x24, 0xb8, 0x01, 0x00, 0x00, 0x41, 0xc7, 0x44, 0x24, 0x78, 0x04, 0x00,
  0x00, 0x00, 0x48, 0x83, 0xcd, 0x01, 0x49, 0x89, 0x6c, 0x24, 0x70, 0x48,
  0x83, 0xe5, 0xfe, 0x48, 0x8d, 0x3c, 0x24, 0x40, 0xf6, 0xc4, 0x0f, 0x0f,
  0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48, 0xb8, 0xff, 0xff, 0xff, 0xff,
  0xff, 0xff, 0xff, 0xff, 0xff, 0xd0, 0x85, 0xc0, 0x0f, 0x84, 0xad, 0x04,
  0x00, 0x00, 0x8b, 0x04, 0x24, 0x4d, 0x8b, 0x66, 0x20, 0x4d, 0x8b, 0xa4,
  0x24, 0xb8, 0x01, 0x00, 0x00, 0x49, 0xc7, 0x44, 0x24, 0x70, 0x00, 0x00,
  0x00, 0x00, 0x41, 0xc7, 0x44, 0x24, 0x78, 0x00, 0x00, 0x00, 0x00, 0xe9,
  0x59, 0xff, 0xff, 0xff, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0x41,
  0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x55, 0x53, 0x4c, 0x8b, 0xd7,
  0x4c, 0x8b, 0xf6, 0x41, 0x56, 0x41, 0x52, 0x4c, 0x8b, 0xe4, 0x48, 0x83,
  0xe4, 0xf0, 0x41, 0x54, 0x48, 0x83, 0xec, 0x18, 0x33, 0xed, 0x4d, 0x8b,
  0x3e, 0x4c, 0x89, 0x34, 0x24, 0x40, 0xf6, 0xc4, 0x0f, 0x0f, 0x84, 0x01,
  0x00, 0x00, 0x00, 0xcc, 0xe8, 0xe6, 0xfc, 0xff, 0xff, 0x40, 0xf6, 0xc4,
  0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48, 0x83, 0xc4, 0x18,
  0x5c, 0x41, 0x5a, 0x41, 0x5e, 0x41, 0x89, 0x02, 0x48, 0x85, 0xed, 0x0f,
  0x84, 0x15, 0x00, 0x00, 0x00, 0x48, 0x81, 0xfd, 0xad, 0x0b, 0x00, 0x00,
  0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x33, 0xc0, 0xe9, 0x05, 0x00,
  0x00, 0x00, 0xb8, 0x01, 0x00, 0x00, 0x00, 0x5b, 0x5d, 0x41, 0x5c, 0x41,
  0x5d, 0x41, 0x5e, 0x41, 0x5f, 0xc3, 0xf4, 0x48, 0x8b, 0xec, 0x48, 0x83,
  0xec, 0x10, 0x4c, 0x8b, 0x54, 0x24, 0x20, 0x49, 0x83, 0xe2, 0x03, 0x4d,
  0x85, 0xd2, 0x0f, 0x84, 0x0b, 0x00, 0x00, 0x00, 0x49, 0x83, 0xfa, 0x01,
  0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x4c, 0x8b, 0x54, 0x24, 0x20,
  0x49, 0x83, 0xe2, 0xfc, 0x4d, 0x8b, 0x72, 0x40, 0x4d, 0x8b, 0x3e, 0x4c,
  0x89, 0x34, 0x24, 0x40, 0xf6, 0xc4, 0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00,
  0x00, 0xcc, 0xe8, 0x58, 0xfc, 0xff, 0xff, 0x40, 0xf6, 0xc4, 0x0f, 0x0f,
  0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48, 0x81, 0xfd, 0xad, 0x0b, 0x00,
  0x00, 0x0f, 0x84, 0x21, 0x00, 0x00, 0x00, 0x48, 0x83, 0xc4, 0x10, 0xb9,
  0xff, 0xff, 0xff, 0xff, 0x48, 0x3b, 0xc1, 0x0f, 0x86, 0x01, 0x00, 0x00,
  0x00, 0xcc, 0x48, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0xf8, 0xff,
  0x48, 0x0b, 0xc8, 0xc3, 0x4c, 0x8b, 0x54, 0x24, 0x20, 0x49, 0x83, 0xe2,
  0x03, 0x4d, 0x85, 0xd2, 0x0f, 0x84, 0x0b, 0x00, 0x00, 0x00, 0x49, 0x83,
  0xfa, 0x01, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x4c, 0x8b, 0x54,
  0x24, 0x20, 0x49, 0x83, 0xe2, 0xfc, 0x4d, 0x8b, 0x72, 0x40, 0x48, 0x83,
  0xc4, 0x10, 0x4d, 0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x92, 0xb8, 0x01, 0x00,
  0x00, 0x49, 0x89, 0x62, 0x70, 0x6a, 0x07, 0x4d, 0x8b, 0x56, 0x10, 0x4d,
  0x8b, 0x52, 0x18, 0x41, 0xff, 0xe2, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0x68,
  0x39, 0x05, 0x00, 0x00, 0x41, 0x57, 0x41, 0x56, 0x41, 0x55, 0x41, 0x54,
  0x41, 0x53, 0x41, 0x52, 0x41, 0x51, 0x41, 0x50, 0x57, 0x56, 0x55, 0x53,
  0x52, 0x51, 0x50, 0x48, 0x81, 0xec, 0x00, 0x01, 0x00, 0x00, 0xf3, 0x44,
  0x0f, 0x7f, 0xbc, 0x24, 0xf0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f,
  0xb4, 0x24, 0xe0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0xac, 0x24,
  0xd0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0xa4, 0x24, 0xc0, 0x00,
  0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0x9c, 0x24, 0xb0, 0x00, 0x00, 0x00,
  0xf3, 0x44, 0x0f, 0x7f, 0x94, 0x24, 0xa0, 0x00, 0x00, 0x00, 0xf3, 0x44,
  0x0f, 0x7f, 0x8c, 0x24, 0x90, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f,
  0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0xf3, 0x0f, 0x7f, 0x7c, 0x24, 0x70,
  0xf3, 0x0f, 0x7f, 0x74, 0x24, 0x60, 0xf3, 0x0f, 0x7f, 0x6c, 0x24, 0x50,
  0xf3, 0x0f, 0x7f, 0x64, 0x24, 0x40, 0xf3, 0x0f, 0x7f, 0x5c, 0x24, 0x30,
  0xf3, 0x0f, 0x7f, 0x54, 0x24, 0x20, 0xf3, 0x0f, 0x7f, 0x4c, 0x24, 0x10,
  0xf3, 0x0f, 0x7f, 0x04, 0x24, 0x4c, 0x8b, 0xec, 0x48, 0x83, 0xe4, 0xf0,
  0x40, 0xf6, 0xc4, 0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48,
  0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd0, 0x48,
  0x85, 0xc0, 0x0f, 0x84, 0x67, 0x02, 0x00, 0x00, 0x49, 0x8b, 0xe5, 0x48,
  0x89, 0x84, 0x24, 0x78, 0x01, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0xbc,
  0x24, 0xf0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0xb4, 0x24, 0xe0,
  0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0xac, 0x24, 0xd0, 0x00, 0x00,
  0x00, 0xf3, 0x44, 0x0f, 0x6f, 0xa4, 0x24, 0xc0, 0x00, 0x00, 0x00, 0xf3,
  0x44, 0x0f, 0x6f, 0x9c, 0x24, 0xb0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f,
  0x6f, 0x94, 0x24, 0xa0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0x8c,
  0x24, 0x90, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0x84, 0x24, 0x80,
  0x00, 0x00, 0x00, 0xf3, 0x0f, 0x6f, 0x7c, 0x24, 0x70, 0xf3, 0x0f, 0x6f,
  0x74, 0x24, 0x60, 0xf3, 0x0f, 0x6f, 0x6c, 0x24, 0x50, 0xf3, 0x0f, 0x6f,
  0x64, 0x24, 0x40, 0xf3, 0x0f, 0x6f, 0x5c, 0x24, 0x30, 0xf3, 0x0f, 0x6f,
  0x54, 0x24, 0x20, 0xf3, 0x0f, 0x6f, 0x4c, 0x24, 0x10, 0xf3, 0x0f, 0x6f,
  0x04, 0x24, 0x48, 0x81, 0xc4, 0x00, 0x01, 0x00, 0x00, 0x58, 0x59, 0x5a,
  0x5b, 0x5d, 0x5e, 0x5f, 0x41, 0x58, 0x41, 0x59, 0x41, 0x5a, 0x41, 0x5b,
  0x41, 0x5c, 0x41, 0x5d, 0x41, 0x5e, 0x41, 0x5f, 0xc3, 0xf4, 0xf4, 0xf4,
  0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0x55,
  0x48, 0x8b, 0xec, 0x4d, 0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x92, 0xb8, 0x01,
  0x00, 0x00, 0x41, 0xc7, 0x42, 0x78, 0x0c, 0x00, 0x00, 0x00, 0x48, 0x83,
  0xcd, 0x01, 0x49, 0x89, 0x6a, 0x70, 0x48, 0x83, 0xe5, 0xfe, 0x41, 0x57,
  0x41, 0x56, 0x41, 0x55, 0x41, 0x54, 0x41, 0x52, 0x41, 0x51, 0x41, 0x50,
  0x57, 0x56, 0x55, 0x53, 0x52, 0x51, 0x50, 0x48, 0x81, 0xec, 0x00, 0x01,
  0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0xbc, 0x24, 0xf0, 0x00, 0x00, 0x00,
  0xf3, 0x44, 0x0f, 0x7f, 0xb4, 0x24, 0xe0, 0x00, 0x00, 0x00, 0xf3, 0x44,
  0x0f, 0x7f, 0xac, 0x24, 0xd0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f,
  0xa4, 0x24, 0xc0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0x9c, 0x24,
  0xb0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0x94, 0x24, 0xa0, 0x00,
  0x00, 0x00, 0xf3, 0x44, 0x0f, 0x7f, 0x8c, 0x24, 0x90, 0x00, 0x00, 0x00,
  0xf3, 0x44, 0x0f, 0x7f, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0xf3, 0x0f,
  0x7f, 0x7c, 0x24, 0x70, 0xf3, 0x0f, 0x7f, 0x74, 0x24, 0x60, 0xf3, 0x0f,
  0x7f, 0x6c, 0x24, 0x50, 0xf3, 0x0f, 0x7f, 0x64, 0x24, 0x40, 0xf3, 0x0f,
  0x7f, 0x5c, 0x24, 0x30, 0xf3, 0x0f, 0x7f, 0x54, 0x24, 0x20, 0xf3, 0x0f,
  0x7f, 0x4c, 0x24, 0x10, 0xf3, 0x0f, 0x7f, 0x04, 0x24, 0x4c, 0x8b, 0xd4,
  0x48, 0x83, 0xec, 0x08, 0x48, 0x83, 0xe4, 0xf0, 0x4c, 0x89, 0x14, 0x24,
  0x40, 0xf6, 0xc4, 0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x48,
  0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd0, 0xa8,
  0xff, 0x0f, 0x84, 0xc4, 0x00, 0x00, 0x00, 0x41, 0x5a, 0x49, 0x8b, 0xe2,
  0xf3, 0x44, 0x0f, 0x6f, 0xbc, 0x24, 0xf0, 0x00, 0x00, 0x00, 0xf3, 0x44,
  0x0f, 0x6f, 0xb4, 0x24, 0xe0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f,
  0xac, 0x24, 0xd0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0xa4, 0x24,
  0xc0, 0x00, 0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0x9c, 0x24, 0xb0, 0x00,
  0x00, 0x00, 0xf3, 0x44, 0x0f, 0x6f, 0x94, 0x24, 0xa0, 0x00, 0x00, 0x00,
  0xf3, 0x44, 0x0f, 0x6f, 0x8c, 0x24, 0x90, 0x00, 0x00, 0x00, 0xf3, 0x44,
  0x0f, 0x6f, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0xf3, 0x0f, 0x6f, 0x7c,
  0x24, 0x70, 0xf3, 0x0f, 0x6f, 0x74, 0x24, 0x60, 0xf3, 0x0f, 0x6f, 0x6c,
  0x24, 0x50, 0xf3, 0x0f, 0x6f, 0x64, 0x24, 0x40, 0xf3, 0x0f, 0x6f, 0x5c,
  0x24, 0x30, 0xf3, 0x0f, 0x6f, 0x54, 0x24, 0x20, 0xf3, 0x0f, 0x6f, 0x4c,
  0x24, 0x10, 0xf3, 0x0f, 0x6f, 0x04, 0x24, 0x48, 0x81, 0xc4, 0x00, 0x01,
  0x00, 0x00, 0x58, 0x59, 0x5a, 0x5b, 0x5d, 0x5e, 0x5f, 0x41, 0x58, 0x41,
  0x59, 0x41, 0x5a, 0x41, 0x5c, 0x41, 0x5d, 0x41, 0x5e, 0x41, 0x5f, 0x4d,
  0x8b, 0x56, 0x20, 0x4d, 0x8b, 0x92, 0xb8, 0x01, 0x00, 0x00, 0x49, 0xc7,
  0x42, 0x70, 0x00, 0x00, 0x00, 0x00, 0x41, 0xc7, 0x42, 0x78, 0x00, 0x00,
  0x00, 0x00, 0x5d, 0xc3, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0xf4, 0x48,
  0x83, 0xe4, 0xf0, 0x48, 0x83, 0xec, 0x30, 0x4c, 0x8b, 0xd4, 0x40, 0xf6,
  0xc4, 0x0f, 0x0f, 0x84, 0x01, 0x00, 0x00, 0x00, 0xcc, 0x49, 0x8b, 0xfa,
  0x48, 0xb8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xd0,
  0x44, 0x8b, 0x50, 0x18, 0x41, 0x83, 0xfa, 0x06, 0x0f, 0x84, 0x0b, 0x00,
  0x00, 0x00, 0x41, 0x83, 0xfa, 0x05, 0x0f, 0x84, 0x23, 0x00, 0x00, 0x00,
  0xcc, 0x48, 0x8b, 0x28, 0x4c, 0x8b, 0x50, 0x20, 0x49, 0xbc, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0xfe, 0xff, 0x4d, 0x33, 0xe2, 0x4c, 0x8b, 0x50,
  0x10, 0x48, 0x8b, 0x60, 0x08, 0x49, 0x8b, 0xc4, 0x41, 0xff, 0xe2, 0x48,
  0x8b, 0x28, 0x4c, 0x8b, 0x50, 0x08, 0x49, 0x8b, 0xe2, 0xc3, 0x0f, 0x0b,
  0xf4, 0xf4, 0xf4, 0x0f, 0x0b
};
unsigned int ___hi_dat_len = 3125;

static bool ShellBuildId(JS::BuildIdCharVector* buildId) {
  // JS shell uses a constant buildid and rely on the user 
  // to manually clear any caches between cache-breaking updates.
  const char buildid[] = "JS-shell";
  return buildId->append(buildid, sizeof(buildid));
}

static bool BarFunc(JSContext* cx, unsigned argc, JS::Value* vp) {
  JS::CallArgs args = JS::CallArgsFromVp(argc, vp);
  args.rval().setInt32(args[0].toInt32());
  return true;
}

static bool WasmExample(JSContext* cx) {
  JS::RootedObject global(cx, boilerplate::CreateGlobal(cx));
  if (!global) {
    return false;
  }

  // Need the same BuildId that was used for serialization.
  JS::SetProcessBuildIdOp(ShellBuildId);

  JSAutoRealm ar(cx, global);

  // Construct Wasm module from AOT bytes.
  JS::RootedObject module_(cx);
  {
    JSObject* arrayBuffer = JS::NewArrayBufferWithUserOwnedContents(cx, ___hi_dat_len, ___hi_dat  );
    if (!arrayBuffer) return false;
    JS::RootedObject buf(cx, arrayBuffer);

    JSObject* mod = JS::DeserializeWasmModule(cx, buf);
    if (!mod) return false;
    module_.set(mod);
  }

  // Get WebAssembly.Instance constructor.
  JS::RootedValue wasm(cx);
  JS::RootedValue wasmInstance(cx);
  if (!JS_GetProperty(cx, global, "WebAssembly", &wasm)) return false;
  JS::RootedObject wasmObj(cx, &wasm.toObject());
  if (!JS_GetProperty(cx, wasmObj, "Instance", &wasmInstance)) return false;

  // Construct Wasm module instance with required imports.
  JS::RootedObject instance_(cx);
  {
    // Build "env" imports object.
    JS::RootedObject envImportObj(cx, JS_NewPlainObject(cx));
    if (!envImportObj) return false;
    if (!JS_DefineFunction(cx, envImportObj, "bar", BarFunc, 1, 0)) return false;
    JS::RootedValue envImport(cx, JS::ObjectValue(*envImportObj));
    // Build imports bag.
    JS::RootedObject imports(cx, JS_NewPlainObject(cx));
    if (!imports) return false;
    if (!JS_SetProperty(cx, imports, "env", envImport)) return false;

    JS::RootedValueArray<2> args(cx);
    args[0].setObject(*module_.get()); // module
    args[1].setObject(*imports.get());// imports

    if (!Construct(cx, wasmInstance, args, &instance_)) return false;
  }

  // Find `foo` method in exports.
  JS::RootedValue exports(cx);
  if (!JS_GetProperty(cx, instance_, "exports", &exports)) return false;
  JS::RootedObject exportsObj(cx, &exports.toObject());
  JS::RootedValue foo(cx);
  if (!JS_GetProperty(cx, exportsObj, "foo", &foo)) return false;

  JS::RootedValue rval(cx);
  if (!Call(cx, JS::UndefinedHandleValue, foo, JS::HandleValueArray::empty(), &rval))
    return false;

  printf("The answer is %d\n", rval.toInt32());
  return true;
}

int main(int argc, const char* argv[]) {
  if (!boilerplate::RunExample(WasmExample)) {
    return 1;
  }
  return 0;
}
